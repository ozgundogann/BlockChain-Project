{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozgun\\\\frontend\\\\BlockChain-Project\\\\src\\\\App.js\";\nimport Web3 from 'web3';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.clear();\nconst web3 = new Web3(Web3.givenProvider);\nasync function interactWithContract() {\n  const accounts = await web3.eth.getAccounts();\n  console.log(accounts);\n  const address = \"0x4Db0a83a48caD864Cd145D1b2e1E15703f2f3Ee3\";\n  const abi = [{\n    \"inputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"_product_name\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"_motherboard_serial\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"_mac_address\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"_product_serial\",\n      \"type\": \"string\"\n    }],\n    \"name\": \"register_product\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"hash\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"get_product\",\n    \"outputs\": [{\n      \"components\": [{\n        \"internalType\": \"string\",\n        \"name\": \"product_name\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"motherboard_serial\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"mac_address\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"product_serial\",\n        \"type\": \"string\"\n      }],\n      \"internalType\": \"struct main.Product\",\n      \"name\": \"\",\n      \"type\": \"tuple\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"product_count\",\n    \"outputs\": [{\n      \"internalType\": \"int256\",\n      \"name\": \"\",\n      \"type\": \"int256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }];\n  const contract = new web3.eth.Contract(abi, address);\n}\nfunction previewImage() {\n  let reader = new FileReader();\n  reader.onload = function (e) {\n    document.getElementById('preview').src = e.target.result;\n    document.getElementById('preview').style.display = 'block';\n  };\n  reader.readAsDataURL(document.getElementById('img').files[0]);\n}\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  // Get the form data\n  // let productName = document.getElementById('pname').value;\n  // let productSerial = document.getElementById('pserial').value;\n  // let macAddress = document.getElementById('mac').value;\n  // let motherboardSerial = document.getElementById('mserial').value;\n  // let productImage = localStorage.getItem('productImage');\n\n  // Create JSON object\n\n  let submitObject = {\n    productName: document.getElementById('pname').value,\n    productSerial: document.getElementById('pserial').value,\n    macAddress: document.getElementById('mac').value,\n    motherboardSerial: document.getElementById('mserial').value\n  };\n\n  // Send JSON object to Backend\n  fetch('http://localhost:5000/api/post', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(submitObject)\n  }).then(response => response.json()).then(data => {\n    console.log('POST request successful:', data);\n  });\n\n  // Send File to Backend\n  // const fileInput = document.getElementById('img');\n  // const file = fileInput.files[0];\n  // if (file) {\n  //     const formData = new FormData();\n  //     formData.append('file', file);\n\n  //     fetch('http://localhost:5000/api/upload', {\n  //         method: 'POST',\n  //         body: formData,\n  //     })\n  //     .then(response => response.json())\n  //     .then(data => {\n  //         console.log('File uploaded successfully:', data);\n  //     })\n  //     .catch(error => {\n  //         console.error('Error uploading file:', error);\n  //     });\n\n  // }\n\n  // Create a string of the form data\n  // let formData = \n  //     'Product Name: ' + productName + '\\n' +\n  //     'Product Serial: ' + productSerial + '\\n' +\n  //     'MAC Address: ' + macAddress + '\\n' +\n  //     'Motherboard Serial: ' + motherboardSerial + '\\n' +\n  //     'Product Image: ' + productImage;\n\n  // // Create a blob from the form data string\n  // let blob = new Blob([formData], {type: \"text/plain;charset=utf-8\"});\n\n  // // Create a link element\n  // let url = URL.createObjectURL(blob);\n  // let link = document.createElement('a');\n  // link.href = url;\n\n  // // Set the download attribute of the link\n  // link.download = 'product_info.txt';\n\n  // // Trigger the download by programmatically clicking the link\n  // link.click();\n}\n\n/*\r\nconst fs = require('fs');\r\n\r\nlet data = 'Hello, World!';\r\n\r\nfs.writeFile('myFile.txt', data, (err) => {\r\n  if (err) throw err;\r\n  console.log('Data written to file');\r\n});\r\n*/\n\nfunction App() {\n  if (window.ethereum) {\n    window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    }).then(res => console.log(res));\n    interactWithContract();\n  } else {\n    alert(\"install metamask extension !!\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TrusTech User Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"/submit_product_info\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pname\",\n          children: \"Product Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 65\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"pname\",\n          name: \"pname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 65\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pserial\",\n          children: \"Product Serial Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"pserial\",\n          name: \"pserial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 69\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 74\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mac\",\n          children: \"MAC Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mac\",\n          name: \"mac\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mserial\",\n          children: \"Motherboard Serial Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 80\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mserial\",\n          name: \"mserial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 69\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"img\",\n          children: \"Insert Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"img\",\n          name: \"img\",\n          accept: \"image/*\",\n          onChange: previewImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 107\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"preview\",\n          alt: \"Product Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Web3","jsxDEV","_jsxDEV","console","clear","web3","givenProvider","interactWithContract","accounts","eth","getAccounts","log","address","abi","contract","Contract","previewImage","reader","FileReader","onload","e","document","getElementById","src","target","result","style","display","readAsDataURL","files","handleSubmit","preventDefault","submitObject","productName","value","productSerial","macAddress","motherboardSerial","fetch","method","headers","body","JSON","stringify","then","response","json","data","App","window","ethereum","request","res","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","className","htmlFor","type","id","name","accept","onChange","alt","_c","$RefreshReg$"],"sources":["C:/Users/ozgun/frontend/BlockChain-Project/src/App.js"],"sourcesContent":["import Web3 from 'web3';\r\nimport './App.css';\r\n\r\nconsole.clear();\r\nconst web3 = new Web3(Web3.givenProvider);\r\n\r\nasync function interactWithContract() {\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n    console.log(accounts);\r\n\r\n    const address = \"0x4Db0a83a48caD864Cd145D1b2e1E15703f2f3Ee3\";\r\n    const abi = [\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_product_name\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_motherboard_serial\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_mac_address\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_product_serial\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"register_product\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"hash\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"name\": \"get_product\",\r\n            \"outputs\": [\r\n                {\r\n                    \"components\": [\r\n                        {\r\n                            \"internalType\": \"string\",\r\n                            \"name\": \"product_name\",\r\n                            \"type\": \"string\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"string\",\r\n                            \"name\": \"motherboard_serial\",\r\n                            \"type\": \"string\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"string\",\r\n                            \"name\": \"mac_address\",\r\n                            \"type\": \"string\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"string\",\r\n                            \"name\": \"product_serial\",\r\n                            \"type\": \"string\"\r\n                        }\r\n                    ],\r\n                    \"internalType\": \"struct main.Product\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"tuple\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"product_count\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"int256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"int256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ];\r\n    const contract = new web3.eth.Contract(abi, address);\r\n\r\n\r\n    \r\n}\r\n\r\nfunction previewImage() {\r\n    let reader = new FileReader();\r\n    reader.onload = function(e) {\r\n      document.getElementById('preview').src = e.target.result;\r\n      document.getElementById('preview').style.display = 'block';\r\n    };\r\n    reader.readAsDataURL(document.getElementById('img').files[0]);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Get the form data\r\n    // let productName = document.getElementById('pname').value;\r\n    // let productSerial = document.getElementById('pserial').value;\r\n    // let macAddress = document.getElementById('mac').value;\r\n    // let motherboardSerial = document.getElementById('mserial').value;\r\n    // let productImage = localStorage.getItem('productImage');\r\n\r\n\r\n    // Create JSON object\r\n\r\n    let submitObject = {\r\n        productName : document.getElementById('pname').value,\r\n        productSerial : document.getElementById('pserial').value,\r\n        macAddress : document.getElementById('mac').value,\r\n        motherboardSerial : document.getElementById('mserial').value\r\n    }\r\n\r\n    // Send JSON object to Backend\r\n    fetch('http://localhost:5000/api/post', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(submitObject)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.log('POST request successful:', data);\r\n    });\r\n\r\n    // Send File to Backend\r\n    // const fileInput = document.getElementById('img');\r\n    // const file = fileInput.files[0];\r\n    // if (file) {\r\n    //     const formData = new FormData();\r\n    //     formData.append('file', file);\r\n\r\n    //     fetch('http://localhost:5000/api/upload', {\r\n    //         method: 'POST',\r\n    //         body: formData,\r\n    //     })\r\n    //     .then(response => response.json())\r\n    //     .then(data => {\r\n    //         console.log('File uploaded successfully:', data);\r\n    //     })\r\n    //     .catch(error => {\r\n    //         console.error('Error uploading file:', error);\r\n    //     });\r\n    \r\n    // }\r\n\r\n\r\n    // Create a string of the form data\r\n    // let formData = \r\n    //     'Product Name: ' + productName + '\\n' +\r\n    //     'Product Serial: ' + productSerial + '\\n' +\r\n    //     'MAC Address: ' + macAddress + '\\n' +\r\n    //     'Motherboard Serial: ' + motherboardSerial + '\\n' +\r\n    //     'Product Image: ' + productImage;\r\n\r\n\r\n    // // Create a blob from the form data string\r\n    // let blob = new Blob([formData], {type: \"text/plain;charset=utf-8\"});\r\n\r\n    // // Create a link element\r\n    // let url = URL.createObjectURL(blob);\r\n    // let link = document.createElement('a');\r\n    // link.href = url;\r\n\r\n    // // Set the download attribute of the link\r\n    // link.download = 'product_info.txt';\r\n\r\n    // // Trigger the download by programmatically clicking the link\r\n    // link.click();\r\n}\r\n\r\n/*\r\nconst fs = require('fs');\r\n\r\nlet data = 'Hello, World!';\r\n\r\nfs.writeFile('myFile.txt', data, (err) => {\r\n  if (err) throw err;\r\n  console.log('Data written to file');\r\n});\r\n*/\r\n\r\n\r\n\r\nfunction App() {\r\n    if (window.ethereum) { \r\n        window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" }) \r\n        .then((res) => console.log(res));\r\n        interactWithContract();\r\n    }\r\n    else {\r\n        alert(\"install metamask extension !!\");\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>TrusTech User Interface</h2>\r\n\r\n            <form action=\"/submit_product_info\" onSubmit={handleSubmit}>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"pname\">Product Name:</label><br/>\r\n                    <input type=\"text\" id=\"pname\" name=\"pname\"/><br/><br/>\r\n                    \r\n                    <label htmlFor=\"pserial\">Product Serial Number:</label><br/>\r\n                    <input type=\"text\" id=\"pserial\" name=\"pserial\"/><br/><br/>\r\n                    \r\n                    <label htmlFor=\"mac\">MAC Address:</label><br/>\r\n                    <input type=\"text\" id=\"mac\" name=\"mac\"/><br/><br/>\r\n                    \r\n                    <label htmlFor=\"mserial\">Motherboard Serial Number:</label><br/>\r\n                    <input type=\"text\" id=\"mserial\" name=\"mserial\"/><br/><br/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"img\">Insert Image:</label><br/>\r\n                    <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" onChange={previewImage}/><br/><br/>\r\n                    \r\n                    <img id=\"preview\" alt=\"Product Preview\"/>\r\n                </div>\r\n                <input type=\"submit\" value=\"Register Product\"/>\r\n            </form> \r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default App; \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}